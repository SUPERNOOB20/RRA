NAME = MEOW

IDIR = ./include   # include dir
SDIR = ./src       # source dir
ODIR = ./obj       # object output dir
LDIR = ./lib       # library dir (unused right now)

CC = gcc
CFLAGS = -I$(IDIR) -MMD -MP -Wall -Wextra -Wpedantic
# easy toggling of other flags by comment next line
# CFLAGS += {flag} {flag} {etc.}

# change this value via DEBUG=0 make or DEBUG=1 make
DEBUG ?= 1  # default to 1 if not set
ifeq ($(DEBUG),1)  # DEBUG = 1
  CFLAGS += -g -O0
else               # DEBUG != 1
  CFLAGS += -O2 -DNDEBUG
endif

# find all .c files in SDIR
SRC = $(wildcard $(SDIR)/*.c)

# turn all .c files into .o files in ODIR
OBJ = $(patsubst $(SDIR)/%.c,$(ODIR)/%.o,$(SRC))

# dependency files generated by compiler (-MMD)
DEPS = $(OBJ:.o=.d)

.PHONY: all clean

all: $(NAME)

$(NAME): $(OBJ)
    $(CC) -o $@ $^ $(CFLAGS)

# build rule for objects
$(ODIR)/%.o: $(SDIR)/%.c | $(ODIR)
    $(CC) -c -o $@ $< $(CFLAGS)

# ensure obj dir exists
$(ODIR):
    mkdir -p $(ODIR)

clean:
    rm -rf $(ODIR) $(NAME)

# include dep files if they exist
-include $(DEPS)
